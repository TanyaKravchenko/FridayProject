{"version":3,"sources":["n2-features/login/Login.module.scss","n2-features/registration/Registration.module.scss","n2-features/notFound/NotFound.module.css","n2-features/super components/Checkbox/Checkbox.module.css","n2-features/super components/InputText/InputText.module.css","n2-features/super components/Button/Button.module.scss","n2-features/super components/Select/Select.module.css","n2-features/super components/AllSuperComponent.module.css","n2-features/super components/Radio/Radio.module.css","n1-main/m1-ui/header/Navbar/Navbar.module.scss","n2-features/profile/Profile.tsx","n2-features/super components/Button/Button.tsx","n2-features/super components/Checkbox/Checkbox.tsx","n2-features/super components/InputText/InputText.tsx","n2-features/super components/Radio/Radio.tsx","n2-features/super components/Select/Select.tsx","n2-features/super components/AllSuperComponents.tsx","n2-features/registration/Registration.tsx","n2-features/password/PasswordRecovery.tsx","n2-features/password/NewPassword.tsx","assets/images/oops.png","n2-features/notFound/NotFound.tsx","n2-features/login/Login.tsx","n1-main/m3-dall/app-api.ts","n1-main/m2-bll/reducers/login-reducer.ts","n2-features/login/LoginContainer.tsx","n1-main/m1-ui/routes/Routes.tsx","n1-main/m1-ui/header/Navbar/Navbar.tsx","n1-main/m1-ui/app/App.tsx","reportWebVitals.ts","n1-main/m2-bll/reducers/app-reducer.ts","n1-main/m2-bll/reducers/profile-reducer.ts","n1-main/m2-bll/reducers/registration-reducer.ts","n1-main/m2-bll/store.ts","index.tsx"],"names":["module","exports","Profile","className","s","profileContainer","Button","disabled","restProps","buttonContainer","defaultButton","Checkbox","type","onChange","onChangeChecked","children","spanClassName","finalInputClassName","checkbox","checkboxContainer","label","e","currentTarget","checked","checkboxTick","checkboxText","InputText","onChangeText","onKeyPress","onEnter","error","finalSpanClassName","input","errorInput","superInput","value","key","placeholder","Radio","name","options","onChangeOption","onChangeCallback","mappedOptions","map","o","i","Select","select","AllSuperComponents","arr","useState","text","setText","setChecked","showAlert","alert","column","onClick","Registration","email","setEmail","password","setPassword","checkPassword","setCheckPassword","registerBlock","registerCard","title","formBlock","inputItem","htmlFor","id","autoComplete","buttonsBlock","cancel","register","PasswordRecovery","passwordRecoveryContainer","NewPassword","newPasswordContainer","NotFound","notFoundContainer","page","errorPage","numberError","errorText","img","src","alt","Login","props","loginBlock","logo","onSubmit","formik","handleSubmit","emailBlock","inputText","getFieldProps","touched","errors","style","color","passwordBlock","inputPassword","href","link","loginBtn","redirectBlock","redirectSpan","signBtn","instance","axios","create","withCredentials","baseURL","authApi","data","post","initialState","isLoggedIn","LoginContainer","loginIn","useSelector","state","login","dispatch","useDispatch","useFormik","initialValues","rememberMe","validate","values","test","length","then","res","console","log","catch","response","message","resetForm","to","path","PROFILE","ALL_COMPONENTS","LOGIN","REG","PASSWORD","PASS_REC","Routes","exact","render","from","Navbar","navLinkItems","item","navLink","activeClassName","active","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","status","isInitialized","rootReducer","combineReducers","app","action","profile","registration","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2d1b836.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginBlock\":\"Login_loginBlock__URJFv\",\"logo\":\"Login_logo__2MjgJ\",\"title\":\"Login_title__3YY5D\",\"emailBlock\":\"Login_emailBlock__2WNfi\",\"inputText\":\"Login_inputText__1c6fE\",\"passwordBlock\":\"Login_passwordBlock__1sGso\",\"inputPassword\":\"Login_inputPassword__2p3cY\",\"link\":\"Login_link__uRt_i\",\"loginBtn\":\"Login_loginBtn__3QAh1\",\"redirectBlock\":\"Login_redirectBlock__393TI\",\"signBtn\":\"Login_signBtn__BvVVa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registerBlock\":\"Registration_registerBlock__1qS6W\",\"registerCard\":\"Registration_registerCard__9vkCO\",\"formBlock\":\"Registration_formBlock__1VawQ\",\"inputItem\":\"Registration_inputItem__38_aq\",\"buttonsBlock\":\"Registration_buttonsBlock__1GWVj\",\"cancel\":\"Registration_cancel__21kLY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"NotFound_page__1w_ls\",\"errorPage\":\"NotFound_errorPage__U5QJJ\",\"numberError\":\"NotFound_numberError__3X_FM\",\"errorText\":\"NotFound_errorText__3Qn5v\",\"img\":\"NotFound_img__3fk6_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkboxContainer\":\"Checkbox_checkboxContainer__1mKnY\",\"checkbox\":\"Checkbox_checkbox__3im7b\",\"checkboxTick\":\"Checkbox_checkboxTick__279GK\",\"checkboxText\":\"Checkbox_checkboxText__31A8n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"InputText_input__JSSni\",\"superInput\":\"InputText_superInput__2cIwC\",\"errorInput\":\"InputText_errorInput__RCVLs\",\"error\":\"InputText_error__2UHd9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"Button_buttonContainer__3vU5v\",\"defaultButton\":\"Button_defaultButton__2WrsC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"Select_options__CWOrt\",\"select\":\"Select_select__12Rb4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"AllSuperComponent_column__q-Dw1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Radio_label__Cz9s5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLinkItems\":\"Navbar_navLinkItems__NgfWg\",\"item\":\"Navbar_item__qHDJ5\",\"active\":\"Navbar_active__2c73O\"};","import React from 'react';\r\nimport s from './Profile.module.css';\r\n\r\ntype ProfilePropsType = {}\r\n\r\nconst Profile: React.FC<ProfilePropsType> = () => {\r\n    return (\r\n        <div className={s.profileContainer}>\r\n            Profile\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react';\r\nimport s from './Button.module.scss';\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype ButtonPropsType = DefaultButtonPropsType & {}\r\n\r\nconst Button: React.FC<ButtonPropsType> = (\r\n    {className, disabled, ...restProps}\r\n) => {\r\n\r\n    return (\r\n        <div className={s.buttonContainer}>\r\n            <button\r\n                className={s.defaultButton}\r\n                disabled={disabled}\r\n                {...restProps}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Button;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react';\r\nimport s from './Checkbox.module.css';\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype CheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst Checkbox: React.FC<CheckboxPropsType> = (\r\n    {\r\n        type,\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children,\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (onChangeChecked) {\r\n            onChangeChecked(e.currentTarget.checked)\r\n        }\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`;\r\n\r\n    return (\r\n        <div className={s.checkboxContainer}>\r\n            <label className={s.label}>\r\n                <input\r\n                    type={'checkbox'}\r\n                    onChange={onChangeCallback}\r\n                    className={finalInputClassName}\r\n                    {...restProps}\r\n                />\r\n                <span className={s.checkboxTick}> </span>\r\n                {children && <span className={s.checkboxText}>{children}</span>}\r\n            </label>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Checkbox;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react';\r\nimport s from './InputText.module.css';\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype InputTextPropsType = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst InputText: React.FC<InputTextPropsType> = (\r\n    {\r\n        type,\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange\r\n        && onChange(e);\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === 'Enter'\r\n        && onEnter\r\n        && onEnter();\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`;\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}`;\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                placeholder={'Enter you email'}\r\n                {...restProps}\r\n            />\r\n            <span className={finalSpanClassName}>{error}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputText;\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from './Radio.module.css'\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype RadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst Radio: React.FC<RadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => (\r\n        <label key={name + \"-\" + i} className={s.label}>\r\n            <input\r\n                type={\"radio\"}\r\n                name=\"radio\"\r\n                value={o}\r\n                checked={value === o}\r\n                onChange={onChangeCallback}\r\n            />\r\n             {o}\r\n        </label>\r\n    )) : [];\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Radio;\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react';\r\nimport s from './Select.module.css'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst Select: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions: any[] = options ? options.map((o, i) => (\r\n        <option className={s.options} key={o + '-' + 1}> {o}</option>\r\n    )) : [];\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <select\r\n            className={s.select}\r\n            onChange={onChangeCallback}\r\n            {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    );\r\n}\r\n\r\nexport default Select;\r\n","import React, {useState} from 'react'\r\nimport s from './AllSuperComponent.module.css'\r\nimport Button from './Button/Button';\r\nimport Checkbox from './Checkbox/Checkbox';\r\nimport InputText from './InputText/InputText';\r\nimport Radio from './Radio/Radio';\r\nimport Select from './Select/Select';\r\n\r\n\r\nconst AllSuperComponents = () => {\r\n    const arr = ['x', 'y', 'z'];\r\n    const [text, setText] = useState<string>('')\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const [value, onChangeOption] = useState(arr[1]);\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text)\r\n        }\r\n        setText('')\r\n    }\r\n\r\n    return (\r\n        <div className={s.column}>\r\n            <InputText\r\n                value={text}\r\n                onChangeText={setText}\r\n                onEnter={showAlert}\r\n                error={error}\r\n\r\n            />\r\n\r\n            <Button\r\n                onClick={showAlert}\r\n            >\r\n                show text\r\n            </Button>\r\n\r\n            <Checkbox\r\n                checked={checked}\r\n                onChangeChecked={setChecked}\r\n            >\r\n                Hello!!!\r\n            </Checkbox>\r\n\r\n            <Radio\r\n                name={'radio'}\r\n                options={arr}\r\n                value={value}\r\n                onChangeOption={onChangeOption}\r\n            />\r\n\r\n            <Select\r\n                options={arr}\r\n                value={value}\r\n                onChangeOption={onChangeOption}\r\n            />\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default AllSuperComponents;","import React, {useState} from 'react';\r\nimport s from './Registration.module.scss';\r\nimport { ChangeEvent } from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {path} from '../../n1-main/m1-ui/routes/Routes';\r\n\r\ntype RegistrationPropsType = {}\r\n\r\nconst Registration: React.FC<RegistrationPropsType> = () => {\r\n    const [email, setEmail] = useState<string>('')\r\n    const [password, setPassword] = useState<string>('')\r\n    const [checkPassword, setCheckPassword] = useState<string>('')\r\n\r\n    const onChangeEmailHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n    }\r\n    const onChangePasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.currentTarget.value)\r\n    }\r\n    const onChangePasswordCheckHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setCheckPassword(e.currentTarget.value)\r\n    }\r\n\r\n    // if (isRegistration) {\r\n    //     return <Redirect to={path.LOGIN}/>\r\n    // }\r\n    return (\r\n        <div className={s.registerBlock}>\r\n            <div className={s.registerCard}>\r\n                <h1 className={s.title}>It-incubator</h1>\r\n                <h2>Sign Up</h2>\r\n                <div className={s.formBlock}>\r\n                    <div className={s.inputItem}>\r\n                        <label htmlFor=\"'registration/email'\">Email</label>\r\n                        <input placeholder=\"Enter email...\"\r\n                               type=\"text\"\r\n                               value={email}\r\n                               onChange={onChangeEmailHandler}\r\n                               id={'registration/email'}/>\r\n                    </div>\r\n                    <div className={s.inputItem}>\r\n                        <label htmlFor=\"registration/password\">Password</label>\r\n                        <input placeholder=\"Enter password...\"\r\n                               type=\"password\"\r\n                               value={password}\r\n                               onChange={onChangePasswordHandler}\r\n                               id={'registration/password'}\r\n                               autoComplete={'new-password'}/>\r\n                    </div>\r\n                    <div className={s.inputItem}>\r\n                        <label htmlFor=\"registration/checkPassword\">Confirm password</label>\r\n                        <input placeholder=\"Confirm password...\"\r\n                               type=\"password\"\r\n                               value={checkPassword}\r\n                               onChange={onChangePasswordCheckHandler}\r\n                               id={'registration/checkPassword'}\r\n                               autoComplete={'new-password'}/>\r\n                    </div>\r\n                    <div className={s.buttonsBlock}>\r\n                        <button className={s.cancel}>Cancel</button>\r\n                        <button type=\"submit\" className={s.register}>Register</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Registration;","import React from 'react';\r\nimport s from './Password.module.scss';\r\n\r\ntype PasswordRecoveryPropsType = {}\r\n\r\nconst PasswordRecovery: React.FC<PasswordRecoveryPropsType> = () => {\r\n    return (\r\n        <div className={s.passwordRecoveryContainer}>\r\n            PasswordRecovery\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PasswordRecovery;","import React from 'react';\r\nimport s from './Password.module.scss';\r\n\r\ntype NewPasswordPropsType = {}\r\n\r\nconst NewPassword: React.FC<NewPasswordPropsType> = () => {\r\n    return (\r\n        <div className={s.newPasswordContainer}>\r\n            NewPassword\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewPassword;","export default __webpack_public_path__ + \"static/media/oops.9d9ca53f.png\";","import React from 'react';\r\nimport s from './NotFound.module.css';\r\nimport img from '../../assets/images/oops.png';\r\n\r\ntype NotFoundPropsType = {}\r\n\r\nconst NotFound: React.FC<NotFoundPropsType> = () => {\r\n    return (\r\n        <div className={s.notFoundContainer}>\r\n            <div className={`${s.page} ${s.errorPage}`}>\r\n                <div className={s.numberError}>404</div>\r\n                <div className={s.errorText}>Oops...Page not found!</div>\r\n                <div className={s.img}><img src={img} alt=\"\"/></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport s from './Login.module.scss';\r\nimport InputText from \"../super components/InputText/InputText\";\r\n\r\ntype LoginPropsType = {\r\n    formik: any\r\n}\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n}\r\n\r\n\r\nexport const Login: React.FC<LoginPropsType> = (props) => {\r\n\r\n    return (\r\n        <div className={s.loginBlock}>\r\n            <h2 className={s.logo}>It-incubator</h2>\r\n            <h3 className={s.title}>Sign in</h3>\r\n            <form onSubmit={props.formik.handleSubmit}>\r\n                <div className={s.emailBlock}>\r\n                    <span>Email</span>\r\n                    <InputText\r\n                        type={'text'}\r\n                        className={s.inputText}\r\n                        {...props.formik.getFieldProps('email')}\r\n                    />\r\n                    {props.formik.touched.email && props.formik.errors.email ? (\r\n                        <div style={{color: 'red'}}>{props.formik.errors.email}</div>\r\n                    ) : null}\r\n                </div>\r\n                <div className={s.passwordBlock}>\r\n                    <span>Password</span>\r\n                    <input\r\n                        type={'password'}\r\n                        className={s.inputPassword}\r\n                        {...props.formik.getFieldProps('password')}\r\n                    />\r\n                    {props.formik.touched.password && props.formik.errors.password ? (\r\n                        <div style={{color: 'red'}}>{props.formik.errors.password}</div>\r\n                    ) : null}\r\n                </div>\r\n                <a href=\"#\" className={s.link}>Forgot password</a>\r\n                <button\r\n                    className={s.loginBtn}\r\n                    type=\"submit\"\r\n                > Login\r\n                </button>\r\n            </form>\r\n            <div className={s.redirectBlock}>\r\n                <span className={s.redirectSpan}>Don’t have an account?</span>\r\n                <button className={s.signBtn}>Sign Up</button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import axios, {AxiosResponse} from 'axios';\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    // baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    baseURL: \"http://localhost:7542/2.0/\",\r\n})\r\n\r\nexport const authApi = {\r\n    me() {},\r\n    login(data:LoginDataType){\r\n        return instance.post<LoginDataType, AxiosResponse<ResponseType>>('auth/login', data)\r\n\r\n    },\r\n\r\n}\r\n\r\n//types\r\n// export type RegisterParamsType = {\r\n//     email:string\r\n//     password:string\r\n// }\r\n//\r\nexport type LoginDataType = {\r\n    email:string\r\n    password:string\r\n    rememberMe: boolean\r\n}\r\n//\r\n// export type ForgotDataType = {\r\n//     email: string\r\n//     from: string\r\n//     message: string\r\n// }\r\n\r\nexport type ResponseType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number\r\n    created: Date\r\n    updated: Date\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    error?: string\r\n}\r\n// {\r\n//     _id: string;\r\n//     email: string;\r\n//     name: string;\r\n//     avatar?: string;\r\n//     publicCardPacksCount: number; // количество колод\r\n//\r\n//     created: Date;\r\n//     updated: Date;\r\n//     isAdmin: boolean;\r\n//     verified: boolean; // подтвердил ли почту\r\n//     rememberMe: boolean;\r\n//\r\n//     error?: string;\r\n// }\r\n\r\n// export type ResponseType<D = {}> = {\r\n//     resultCode: number\r\n//     messages: Array<string>\r\n//     fieldsErrors: Array<string>\r\n//     data: D\r\n// }","import {authApi, LoginDataType} from \"../../m3-dall/app-api\";\r\nimport {Dispatch} from \"react\";\r\n\r\nconst initialState = {\r\n    isLoggedIn: false\r\n}\r\n\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'login/SET-IS-LOGGED-IN':\r\n                return {...state, isLoggedIn: action.value}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actionCreators\r\nexport const setIsLoggedInAC = (value: boolean) =>\r\n    ({type: 'login/SET-IS-LOGGED-IN', value} as const)\r\n\r\n//type\r\ntype InitialStateType = typeof initialState\r\n\r\ntype ActionsType = ReturnType<typeof setIsLoggedInAC>\r\n\r\n\r\n//thunks\r\n\r\n\r\nexport const loginTC = (data:LoginDataType) => (dispatch:Dispatch<ActionsType>)=> {\r\n    authApi.login(data)\r\n        .then(res => {\r\n            console.log(res)\r\n            dispatch(setIsLoggedInAC(true))\r\n        }).catch(e => e.response ? e.response.data.error : (e.message + ', more details in the console'))\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport {Login} from './Login';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"../../n1-main/m2-bll/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {path} from \"../../n1-main/m1-ui/routes/Routes\";\r\nimport {useFormik} from \"formik\";\r\nimport {loginTC} from \"../../n1-main/m2-bll/reducers/login-reducer\";\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n}\r\n\r\n\r\nexport const LoginContainer: React.FC = () => {\r\n    const loginIn = useSelector<RootStateType, boolean>(state=> state.login.isLoggedIn)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            }else if (values.password.length <= 3 || values.password.length>20) {\r\n                errors.password = 'password should consist from 3 to 20 symbols'\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(loginTC(values))\r\n            formik.resetForm()\r\n        },\r\n    })\r\n    if(loginIn){\r\n        return <Redirect to={path.PROFILE} />\r\n    }\r\n    return (\r\n\r\n        <div>\r\n            <Login formik={formik}/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport Profile from '../../../n2-features/profile/Profile';\r\nimport AllSuperComponents from '../../../n2-features/super components/AllSuperComponents';\r\nimport Registration from '../../../n2-features/registration/Registration';\r\nimport PasswordRecovery from '../../../n2-features/password/PasswordRecovery';\r\nimport NewPassword from '../../../n2-features/password/NewPassword';\r\nimport NotFound from '../../../n2-features/notFound/NotFound';\r\nimport {LoginContainer} from '../../../n2-features/login/LoginContainer';\r\n\r\nexport const path = {\r\n    ALL_COMPONENTS: '/allSuperComponents',\r\n    PROFILE: '/profile',\r\n    LOGIN: '/login',\r\n    REG: '/registration',\r\n    PASSWORD: '/newPassword',\r\n    PASS_REC: '/passwordRecovery',\r\n}\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path={'/'} exact render={() => <AllSuperComponents/>}/>\r\n                <Route path={path.ALL_COMPONENTS} exact render={() => <AllSuperComponents/>}/>\r\n                <Route path={path.PROFILE} exact render={() => <Profile/>}/>\r\n                <Route path={path.LOGIN} exact render={() => <LoginContainer/>}/>\r\n                <Route path={path.REG} exact render={() => <Registration/>}/>\r\n                <Route path={path.PASSWORD} exact render={() => <PasswordRecovery/>}/>\r\n                <Route path={path.PASS_REC} exact render={() => <NewPassword/>}/>\r\n                <Route path={'/404'} render={() => <NotFound/>}/>\r\n                <Redirect from={'*'} to={'/404'}/>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n\r\n\r\nexport const routes = {\r\n    mainPacks: '/main/packs',\r\n    mainCards: '/main/cards/:id/:name',\r\n    login: '/login',\r\n    register: '/register',\r\n    forgotPass: '/restore-pass',\r\n    setPass: `/set-new-password/:token?`,\r\n    err404: '/404',\r\n    profile: '/profile',\r\n    testPage: '/TestPage',\r\n    learnQuestion: '/LearnQuestion/:name/:id'\r\n}","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './Navbar.module.scss';\r\nimport {path} from '../../routes/Routes';\r\n\r\ntype NavbarPropsType = {}\r\n\r\nconst Navbar: React.FC<NavbarPropsType> = () => {\r\n    return (\r\n        <div className={s.navLinkItems}>\r\n            <div className={s.item}>\r\n                <NavLink to={path.ALL_COMPONENTS} className={s.navLink}\r\n                         activeClassName={s.active}> Main </NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={path.PROFILE} className={s.navLink}\r\n                         activeClassName={s.active}> Profile </NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={path.LOGIN} className={s.navLink} activeClassName={s.active}> Login </NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={path.REG} className={s.navLink}\r\n                         activeClassName={s.active}> Registration </NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={path.PASSWORD} className={s.navLink}\r\n                         activeClassName={s.active}> PasswordRecovery </NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={path.PASS_REC} className={s.navLink}\r\n                         activeClassName={s.active}> NewPassword </NavLink>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\nimport './App.css';\nimport Navbar from '../header/Navbar/Navbar';\nimport Routes from '../routes/Routes';\n\nconst App = () => {\n    return (\n        <div className=\"App\">\n            <Navbar/>\n            <Routes/>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    status: 'succeeded' as RequestStatusType,\r\n    error: null as string | null,\r\n    isInitialized: false\r\n}\r\n\r\nexport const appReducer = (state: AppInitialStateType = initialState, action: AppActionsType): AppInitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/SET-STATUS':\r\n\r\n        case 'APP/SET-ERROR':\r\n\r\n\r\n        case 'APP/SET-IS-INITIALIZED':\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAppStatusAC = (status: RequestStatusType) => ({type: 'APP/SET-STATUS', status} as const)\r\nexport const setAppErrorAC = (error: string | null) => ({type: 'APP/SET-ERROR', error} as const)\r\nexport const setIsInitializedAC = (isInitialized: boolean) => ({type: 'APP/SET-IS-INITIALIZED', isInitialized} as const)\r\n\r\n//type\r\nexport type AppInitialStateType = typeof initialState\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\nexport type SetAppStatusActionType = ReturnType<typeof setAppStatusAC>\r\nexport type SetAppErrorActionType = ReturnType<typeof setAppErrorAC>\r\nexport type SetIsInitializedAC = ReturnType<typeof setIsInitializedAC>\r\nexport type AppActionsType = SetAppStatusActionType | SetAppErrorActionType | SetIsInitializedAC\r\n\r\n\r\n\r\n\r\n\r\n","type InitialStateType = {\r\n}\r\n\r\ntype ActionsType = {}\r\n\r\nconst initialState = {\r\n\r\n}\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action) {\r\n        case '':\r\n            return {\r\n                ...state\r\n\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","type InitialStateType = {\r\n}\r\n\r\ntype ActionsType = {}\r\n\r\nconst initialState = {\r\n\r\n}\r\n\r\nexport const registrationReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action) {\r\n        case '':\r\n            return {\r\n                ...state\r\n\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport thunk, { ThunkAction } from 'redux-thunk';\r\nimport {appReducer} from './reducers/app-reducer';\r\nimport {loginReducer} from './reducers/login-reducer';\r\nimport {profileReducer} from './reducers/profile-reducer';\r\nimport {registrationReducer} from './reducers/registration-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    profile: profileReducer,\r\n    login: loginReducer,\r\n    registration: registrationReducer,\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type RootStateType = ReturnType<typeof rootReducer>\r\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType, RootStateType, unknown,any>","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './n1-main/m1-ui/app/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {store} from './n1-main/m2-bll/store';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </HashRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}